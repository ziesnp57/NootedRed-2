name: CI

on:
  push:
  pull_request:
  workflow_dispatch:
  release:
    types: [published]

env:
  PROJECT_TYPE: KEXT

jobs:
  build:
    name: Build
    runs-on: macos-latest
    env:
      JOB_TYPE: BUILD
    steps:
      - name: 获取当前时间
        id: date
        env:
          TZ: Asia/Shanghai
        run: |
          echo "today=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
          echo "now=$(date +'%s')" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - name: CI Bootstrap
        run: |
          src=$(/usr/bin/curl -Lfs https://raw.githubusercontent.com/acidanthera/ocbuild/master/ci-bootstrap.sh) && eval "$src" || exit 1
      - name: Lilu Bootstrap
        run: |
          src=$(/usr/bin/curl -Lfs https://raw.githubusercontent.com/acidanthera/Lilu/master/Lilu/Scripts/bootstrap.sh) && eval "$src" || exit 1

      - run: xcodebuild -configuration Release

      - name: 打包镜像文件
        # if: github.event_name == 'release'
        if: ${{ github.event_name == 'push' && contains(github.event.head_commit.message, 'release') }}
        run: |
          cp build/Release/NootedRed-1.0.0-RELEASE.zip /tmp/

      - name: Upload to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: build/*/*.zip

      - name: 生成发布说明
        # if: github.event_name == 'release'
        if: ${{ github.event_name == 'push' && contains(github.event.head_commit.message, 'release') }}
        run: |
          echo "## 注意" >> /tmp/xx.md
          echo "实现了如下功能：" >> /tmp/xx.md
          echo "1. 恢复被官方删除的VCN相关代码；" >> /tmp/xx.md
          echo "2. 添加BFixup相关代码。" >> /tmp/xx.md
          echo "直接使用，不需要任何参数即可\`开启硬解\`。" >> /tmp/xx.md
          echo "----------------------------------" >> /tmp/xx.md
          echo "The following functions have been implemented:" >> /tmp/xx.md
          echo "1. Restore the VCN related code which was deleted by the official. 2;" >> /tmp/xx.md
          echo "2. Add BFixup related code." >> /tmp/xx.md
          echo "Use it directly without any parameters to turn on hard solving." >> /tmp/xx.md
          git log -"1" --format="- %H %s" | sed '/^$/d' >> /tmp/xx.md

      - name: 发布
        # if: github.event_name == 'release'
        if: ${{ github.event_name == 'push' && contains(github.event.head_commit.message, 'release') }}
        uses: ncipollo/release-action@v1.14.0
        with:
          # prerelease: true
          tag: "1.0.${{steps.date.outputs.now}}"
          name: Build ${{steps.date.outputs.today}}
          bodyFile: /tmp/xx.md
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: /tmp/NootedRed-1.0.0-RELEASE.zip

      - name: 删除以前的发布
        # if: github.event_name == 'release'
        if: ${{ github.event_name == 'push' && contains(github.event.head_commit.message, 'release') }}
        uses: dev-drprasad/delete-older-releases@v0.3.3
        with:
          repo: htmambo/NootedRed
          keep_latest: 5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 删除以前的标签
        run: |
          git ls-remote --tags origin | awk '{print $2}' | sed 's/refs\/tags\///' | sort -rV | tail -n +6 | xargs git push --delete origin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
